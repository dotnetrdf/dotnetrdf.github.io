<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>GraphPersistenceWrapper.Equals Method (IGraph, Dictionary(INode, INode))</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="M:VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)" /><meta name="Description" content="Determines whether this Graph is equal to the given Graph." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="VDS.RDF" /><meta name="file" content="M_VDS_RDF_GraphPersistenceWrapper_Equals_1" /><meta name="guid" content="M_VDS_RDF_GraphPersistenceWrapper_Equals_1" /><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">dotNetRDF API Documentation<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_VDS_RDF.htm" title="dotNetRDF API Documentation" tocid="roottoc">dotNetRDF API Documentation</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/N_VDS_RDF.htm" title="VDS.RDF" tocid="N_VDS_RDF">VDS.RDF</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/T_VDS_RDF_GraphPersistenceWrapper.htm" title="GraphPersistenceWrapper Class" tocid="T_VDS_RDF_GraphPersistenceWrapper">GraphPersistenceWrapper Class</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Methods_T_VDS_RDF_GraphPersistenceWrapper.htm" title="GraphPersistenceWrapper Methods" tocid="Methods_T_VDS_RDF_GraphPersistenceWrapper">GraphPersistenceWrapper Methods</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/Overload_VDS_RDF_GraphPersistenceWrapper_Equals.htm" title="Equals Method " tocid="Overload_VDS_RDF_GraphPersistenceWrapper_Equals">Equals Method </a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_VDS_RDF_GraphPersistenceWrapper_Equals.htm" title="Equals Method (Object)" tocid="M_VDS_RDF_GraphPersistenceWrapper_Equals">Equals Method (Object)</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/M_VDS_RDF_GraphPersistenceWrapper_Equals_1.htm" title="Equals Method (IGraph, Dictionary(INode, INode))" tocid="M_VDS_RDF_GraphPersistenceWrapper_Equals_1">Equals Method (IGraph, Dictionary(INode, INode))</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="titleColumn"><h1>GraphPersistenceWrapper<span id="LST265F0EAF_0"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_0?cpp=::|nu=.");</script>Equals Method (IGraph, Dictionary<span id="LST265F0EAF_1"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_1?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>INode, INode<span id="LST265F0EAF_2"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_2?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST265F0EAF_3"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_3?cpp=%");</script>)</h1></td></tr></table><span class="introStyle"></span> <div class="summary">
            Determines whether this Graph is equal to the given Graph.
            </div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_VDS_RDF.htm">VDS.RDF</a><br />
    <strong>Assembly:</strong>
   dotNetRDF (in dotNetRDF.dll) Version: <div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EBCA_tab1" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','cs','1','2');return false;">C#</a></div><div id="ID0EBCA_tab2" class="codeSnippetContainerTab"><a href="#" onclick="javascript:ChangeTab('ID0EBCA','vb','2','2');return false;">VB</a></div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EBCA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EBCA');return false;" title="Copy">Copy</a></div></div><div id="ID0EBCA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="identifier">bool</span> <span class="identifier">Equals</span>(
	<span class="identifier">IGraph</span> <span class="parameter">g</span>,
	<span class="keyword">out</span> <span class="identifier">Dictionary</span>&lt;<span class="identifier">INode</span>, <span class="identifier">INode</span>&gt; <span class="parameter">mapping</span>
)</pre></div><div id="ID0EBCA_code_Div2" class="codeSnippetContainerCode" style="display: none"><pre xml:space="preserve"><span class="keyword">Public</span> <span class="keyword">Function</span> <span class="identifier">Equals</span> ( 
	<span class="parameter">g</span> <span class="keyword">As</span> <span class="identifier">IGraph</span>,
	&lt;<span class="identifier">OutAttribute</span>&gt; <span class="keyword">ByRef</span> <span class="parameter">mapping</span> <span class="keyword">As</span> <span class="identifier">Dictionary</span>(<span class="keyword">Of</span> <span class="identifier">INode</span>, <span class="identifier">INode</span>)
) <span class="keyword">As</span> <span class="identifier">Boolean</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EBCA");</script><h4 class="subHeading">Parameters</h4><dl><dt><span class="parameter">g</span></dt><dd>Type: <a href="T_VDS_RDF_IGraph.htm">VDS.RDF<span id="LST265F0EAF_4"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_4?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>IGraph</a><br />Graph to test for equality.</dd><dt><span class="parameter">mapping</span></dt><dd>Type: <a href="https://docs.microsoft.com/dotnet/api/system.collections.generic.dictionary-2" target="_blank">System.Collections.Generic<span id="LST265F0EAF_5"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_5?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Dictionary</a><span id="LST265F0EAF_6"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_6?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script><a href="T_VDS_RDF_INode.htm">INode</a>, <a href="T_VDS_RDF_INode.htm">INode</a><span id="LST265F0EAF_7"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_7?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST265F0EAF_8"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_8?cpp=%");</script><br />Mapping of Blank Nodes iff the Graphs are equal and contain some Blank Nodes.</dd></dl><h4 class="subHeading">Return Value</h4>Type: <a href="https://docs.microsoft.com/dotnet/api/system.boolean" target="_blank">Boolean</a><br /><p style="color: #dc143c; font-size: 8.5pt; font-weight: bold;">[Missing &lt;returns&gt; documentation for "M:VDS.RDF.GraphPersistenceWrapper.Equals(VDS.RDF.IGraph,System.Collections.Generic.Dictionary{VDS.RDF.INode,VDS.RDF.INode}@)"]</p><h4 class="subHeading">Implements</h4><a href="M_VDS_RDF_IGraph_Equals.htm">IGraph<span id="LST265F0EAF_9"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_9?cs=.|vb=.|cpp=::|nu=.|fs=.");</script>Equals(IGraph, Dictionary<span id="LST265F0EAF_10"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_10?cs=&lt;|vb=(Of |cpp=&lt;|fs=&lt;'|nu=(");</script>INode, INode<span id="LST265F0EAF_11"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_11?cs=&gt;|vb=)|cpp=&gt;|fs=&gt;|nu=)");</script><span id="LST265F0EAF_12"></span><script type="text/javascript">AddLanguageSpecificTextSet("LST265F0EAF_12?cpp=%");</script>)</a><br /></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID2RBSection" class="collapsibleSection"><p>
            The algorithm used to determine Graph equality is based in part on a Iterative Vertex Classification Algorithm described in a Technical Report from HP by Jeremy J Carroll -. <a href="http://www.hpl.hp.com/techreports/2001/HPL-2001-293.html">Matching RDF Graphs</a></p><p>
            Graph Equality is determined according to the following algorithm:.
            </p><ol><li>If the given Graph is null Graphs are not equal</li><li>If the given Graph is this Graph (as determined by Reference Equality) then Graphs are equal</li><li>If the Graphs have a different number of Triples they are not equal</li><li>Declare a list of Triples which are the Triples of the given Graph called <em>OtherTriples</em></li><li>Declare two dictionaries of Nodes to Integers which are called <em>LocalClassification</em> and <em>OtherClassification</em></li><li>For Each Triple in this Graph
                <ol><li>If it is a Ground Triple and cannot be found and removed from <em>OtherTriples</em> then Graphs are not equal since the Triple does not exist in both Graphs</li><li>If it contains Blank Nodes track the number of usages of this Blank Node in <em>LocalClassification</em></li></ol></li><li>If there are any Triples remaining in <em>OtherTriples</em> which are Ground Triples then Graphs are not equal since this Graph does not contain them</li><li>If all the Triples from both Graphs were Ground Triples and there were no Blank Nodes then the Graphs are equal</li><li>Iterate over the remaining Triples in <em>OtherTriples</em> and populate the <em>OtherClassification</em></li><li>If the count of the two classifications is different the Graphs are not equal since there are differing numbers of Blank Nodes in the Graph</li><li>Now build two additional dictionaries of Integers to Integers which are called <em>LocalDegreeClassification</em> and <em>OtherDegreeClassification</em>.  Iterate over <em>LocalClassification</em> and <em>OtherClassification</em> such that the corresponding degree classifications contain a mapping of the number of Blank Nodes with a given degree</li><li>If the count of the two degree classifications is different the Graphs are not equal since there are not the same range of Blank Node degrees in both Graphs</li><li>For All classifications in <em>LocalDegreeClassification</em> there must be a matching classification in <em>OtherDegreeClassification</em> else the Graphs are not equal</li><li>Then build a possible mapping using the following rules:
                <ol><li>Any Blank Node used only once should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li><li>Any Blank Node with a unique degree should be mapped to an equivalent Blank Node in the other Graph.  If this is not possible then the Graphs are not equal</li><li>Keep a copy of the mapping up to this point as a Base Mapping for use as a fallback in later steps</li><li>Build up lists of dependent pairs of Blank Nodes for both Graphs</li><li>Use these lists to determine if there are any independent nodes not yet mapped.  These should be mapped to equivalent Blank Nodes in the other Graph, if this is not possible the Graphs are not equal</li><li>Use the Dependencies and existing mappings to generate a possible mapping</li><li>If a Complete Possible Mapping (there is a Mapping for each Blank Node from this Graph to the Other Graph) then test this mapping.  If it succeeds then the Graphs are equal</li><li>Otherwise we now fallback to the Base Mapping and use it as a basis for Brute Forcing the possible solution space and testing every possibility until either a mapping works or we find the Graphs to be non-equal</li></ol></li></ol></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID3RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="T_VDS_RDF_GraphPersistenceWrapper.htm">GraphPersistenceWrapper Class</a></div><div class="seeAlsoStyle"><a href="Overload_VDS_RDF_GraphPersistenceWrapper_Equals.htm">Equals Overload</a></div><div class="seeAlsoStyle"><a href="N_VDS_RDF.htm">VDS.RDF Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter">Please report any bugs or issues with this documentation at http://github.com/dotnetrdf/dotnetrdf/issues<p><a href="https://raw.githubusercontent.com/dotnetrdf/dotnetrdf/master/License.txt" target="_blank">Copyright (c) 2009 - 2020 dotNetRDF Project</a></p> </div></body></html>